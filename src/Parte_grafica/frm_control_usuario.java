package Parte_grafica;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 *
 * @author User
 */
public class frm_control_usuario extends javax.swing.JFrame {
    //Para el funcionamiento de la tabla
    DefaultTableModel Usuarios;
    
    //Esto es parte del evento que filtra la información de un textfield para que se presente en la tabla 
    TableRowSorter trs;
    
    //Variables globales para la conexión de la base de datos
    PreparedStatement ps;
    ResultSet rs;
    
    //Instancias globales para la conexión de la base de datos
    Connection cn = MyConnection.getConnection();
    MyConnection cc = new MyConnection();

    public frm_control_usuario() {
        initComponents();
        
        //Para poner la pantalla centralizada
        this.setLocationRelativeTo(null);
        
        //Parte perteneciente a la tabla
        this.Usuarios = (DefaultTableModel) table_usuario.getModel();
        MostrarDatos("");
    }

    public final void MostrarDatos(String valor) {
        //Función para mostrar datos en la tabla

        RefrescarTabla();

        Usuarios.addColumn("id_usuario");
        Usuarios.addColumn("usuario");
        Usuarios.addColumn("contrasena");
        Usuarios.addColumn("nombre");
        Usuarios.addColumn("apellido");
        Usuarios.addColumn("correo");
        Usuarios.addColumn("rol");

        this.table_usuario.setModel(Usuarios);

        String sql;
        if (valor.equals("")) {
            sql = "SELECT * FROM usuarios";
        } 
        else {
            sql = "SELECT * FROM usuarios WHERE usuario='" + valor + "'";
        }

        String[] datos = new String[6];

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);
                datos[5] = rs.getString(6);

                Usuarios.addRow(datos);

            }

            table_usuario.setModel(Usuarios);
            
        } catch (SQLException ex) {
            Logger.getLogger(frm_control_usuario.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error " + ex);
        }
    }

    public void RefrescarTabla() {
        //Función para refrescar la tabla
        try {
            Usuarios.setColumnCount(0);
            Usuarios.setRowCount(0);
            table_usuario.revalidate();
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error " + ex);
        }
    }

    public boolean RevisarUsuario(String usuario) {
        //Función para revisar si el usuario existe dentro de la base de datos

        boolean checkUser = false;
        String query = "SELECT * FROM `usuarios` WHERE `usuario` =?";

        try {
            ps = MyConnection.getConnection().prepareStatement(query);
            ps.setString(1, usuario);

            rs = ps.executeQuery();

            if (rs.next()) {
                checkUser = true;
            }
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error" + ex);
        }

        return checkUser;
    }

    public void Limpiar() {
        //Esta función es para limpiar los valores ingresados en los textfield
        try {
            txt_nombre.setText("");
            txt_contrasena.setText("");
            txt_nombre.setText("");
            txt_apellido.setText("");
            txt_correo.setText("");
            cmb_rol.setSelectedIndex(0);
        } 
        catch (Exception ex) {
            JOptionPane.showInternalMessageDialog(null, "Error" + ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_usuario1 = new javax.swing.JTextField();
        pnl_bg1 = new javax.swing.JPanel();
        pnl_bg2 = new javax.swing.JPanel();
        line1 = new javax.swing.JSeparator();
        lb_control_usuario = new javax.swing.JLabel();
        img_logo = new javax.swing.JLabel();
        lb_usuario = new javax.swing.JLabel();
        txt_usuario = new javax.swing.JTextField();
        lb_contrasena = new javax.swing.JLabel();
        txt_contrasena = new javax.swing.JPasswordField();
        lb_nombre = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        lb_apellido = new javax.swing.JLabel();
        txt_apellido = new javax.swing.JTextField();
        lb_correo = new javax.swing.JLabel();
        txt_correo = new javax.swing.JTextField();
        lb_rol = new javax.swing.JLabel();
        cmb_rol = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_usuario = new javax.swing.JTable();
        btn_borrar = new javax.swing.JButton();
        btn_guardar = new javax.swing.JButton();
        btn_modificar = new javax.swing.JButton();
        btn_imprimir = new javax.swing.JButton();

        txt_usuario1.setBackground(new java.awt.Color(230, 230, 230));
        txt_usuario1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Control de usuario");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_bg1.setBackground(new java.awt.Color(255, 255, 255));

        pnl_bg2.setBackground(new java.awt.Color(1, 166, 190));

        line1.setPreferredSize(new java.awt.Dimension(2, 4));

        lb_control_usuario.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lb_control_usuario.setForeground(new java.awt.Color(255, 255, 255));
        lb_control_usuario.setText("Control de usuario");

        javax.swing.GroupLayout pnl_bg2Layout = new javax.swing.GroupLayout(pnl_bg2);
        pnl_bg2.setLayout(pnl_bg2Layout);
        pnl_bg2Layout.setHorizontalGroup(
            pnl_bg2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_bg2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pnl_bg2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_control_usuario)
                    .addComponent(line1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(465, Short.MAX_VALUE))
        );
        pnl_bg2Layout.setVerticalGroup(
            pnl_bg2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_bg2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_control_usuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(line1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        img_logo.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Documents\\NetBeansProjects\\Proyecto_AgroQampo\\src\\Imagenes\\Logo_1.png")); // NOI18N

        lb_usuario.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lb_usuario.setText("Usuario:");

        txt_usuario.setBackground(new java.awt.Color(230, 230, 230));
        txt_usuario.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        txt_usuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_usuarioKeyTyped(evt);
            }
        });

        lb_contrasena.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lb_contrasena.setText("Contraseña:");

        txt_contrasena.setBackground(new java.awt.Color(230, 230, 230));

        lb_nombre.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lb_nombre.setText("Nombre:");

        txt_nombre.setBackground(new java.awt.Color(230, 230, 230));
        txt_nombre.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        lb_apellido.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lb_apellido.setText("Apellido:");

        txt_apellido.setBackground(new java.awt.Color(230, 230, 230));
        txt_apellido.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        lb_correo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lb_correo.setText("Correo:");

        txt_correo.setBackground(new java.awt.Color(230, 230, 230));
        txt_correo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        lb_rol.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lb_rol.setText("Rol:");

        cmb_rol.setBackground(new java.awt.Color(230, 230, 230));
        cmb_rol.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        cmb_rol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));

        table_usuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        table_usuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_usuarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_usuario);

        btn_borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Borrar.png"))); // NOI18N
        btn_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrarActionPerformed(evt);
            }
        });

        btn_guardar.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Documents\\NetBeansProjects\\Proyecto_AgroQampo\\src\\Imagenes\\Guardar.png")); // NOI18N
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });

        btn_modificar.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Documents\\NetBeansProjects\\Proyecto_AgroQampo\\src\\Imagenes\\Modificar.png")); // NOI18N
        btn_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarActionPerformed(evt);
            }
        });

        btn_imprimir.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Documents\\NetBeansProjects\\Proyecto_AgroQampo\\src\\Imagenes\\Imprimir.png")); // NOI18N
        btn_imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_imprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_bg1Layout = new javax.swing.GroupLayout(pnl_bg1);
        pnl_bg1.setLayout(pnl_bg1Layout);
        pnl_bg1Layout.setHorizontalGroup(
            pnl_bg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_bg1Layout.createSequentialGroup()
                .addGroup(pnl_bg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl_bg1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(pnl_bg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_bg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lb_usuario)
                                .addComponent(lb_rol)
                                .addComponent(cmb_rol, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_apellido)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_bg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnl_bg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lb_apellido)
                                        .addComponent(txt_usuario)
                                        .addComponent(txt_nombre)
                                        .addComponent(lb_contrasena)
                                        .addComponent(lb_nombre)
                                        .addComponent(txt_contrasena, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                                        .addComponent(txt_correo))
                                    .addComponent(lb_correo)))
                            .addGroup(pnl_bg1Layout.createSequentialGroup()
                                .addComponent(btn_borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(pnl_bg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_imprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnl_bg1Layout.createSequentialGroup()
                        .addComponent(pnl_bg2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(img_logo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        pnl_bg1Layout.setVerticalGroup(
            pnl_bg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_bg1Layout.createSequentialGroup()
                .addGroup(pnl_bg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_bg1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(pnl_bg2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(img_logo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lb_usuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_bg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_bg1Layout.createSequentialGroup()
                        .addComponent(txt_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb_contrasena)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_contrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lb_nombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb_apellido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb_correo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_correo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb_rol)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_rol, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addGroup(pnl_bg1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_borrar)
                    .addComponent(btn_guardar)
                    .addComponent(btn_modificar)
                    .addComponent(btn_imprimir))
                .addGap(514, 514, 514))
        );

        getContentPane().add(pnl_bg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrarActionPerformed
        //Botón para borrar un registro de la tabla y de la base de datos
        String id = (String) table_usuario.getValueAt(table_usuario.getSelectedRow(),0) ;
        
        String query = "DELETE FROM usuarios WHERE id_usuario=?";
        try {
            ps = MyConnection.getConnection().prepareStatement(query);
            ps.setString(1, id);
            
            if(ps.executeUpdate() > 0)
            {
                JOptionPane.showMessageDialog(null, "Registro eliminado");
                
                //Funciones para mostrar los datos en la tabla  y para limpiar los textfields
                Limpiar();
                MostrarDatos(""); 
            }           
        } 
        catch (SQLException ex) {
            Logger.getLogger(frm_producto.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "error "+ex);
        }       
    }//GEN-LAST:event_btn_borrarActionPerformed

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        //Botón para registrar datos nuevos a la base de datos
        String usu = txt_nombre.getText();
        String cont = String.valueOf(txt_contrasena.getPassword());
        String nom = txt_nombre.getText();
        String ape = txt_apellido.getText();
        String cor = txt_correo.getText();
        String rol = String.valueOf(cmb_rol.getSelectedIndex());

        if (usu.equals("")) {
            JOptionPane.showMessageDialog(null, "Agrega un usuario");
        } else if (cont.equals("")) {
            JOptionPane.showMessageDialog(null, "Agrega una contraseña");
        } else if (RevisarUsuario(usu)) {
            JOptionPane.showMessageDialog(null, "Este usuario ya existe");
        } else {
            PreparedStatement ps;
            String query = "INSERT INTO `usuarios`(`usuario`, `contrasena`, `nombre`, `apellido`, `correo`, `rol`) VALUES (?,?,?,?,?,?)";

            try {
                ps = MyConnection.getConnection().prepareStatement(query);

                ps.setString(1, usu);
                ps.setString(2, cont);
                ps.setString(3, nom);
                ps.setString(4, ape);
                ps.setString(5, cor);
                ps.setString(6, rol);

                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Nuevo usuario agregado");
                    
                    //Funciones para mostrar los datos en la tabla cuando se guarden y para limpiar los textfields
                    MostrarDatos("");
                    Limpiar();
                }
            } catch (SQLException ex) {
                Logger.getLogger(frm_main.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "error " + ex);
            }
        }
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
        //Botón para actualizar o modificar los datos de la base de datos               
        try{
            String id = (String) Usuarios.getValueAt(table_usuario.getSelectedRow(), 0);
            String usuario = txt_usuario.getText();
            String contrasena = String.valueOf(txt_contrasena.getPassword());
            String nombre = txt_nombre.getText();
            String apellido = txt_apellido.getText();
            String correo = txt_correo.getText();
            String rol = String.valueOf(cmb_rol.getSelectedIndex());

            String query = "UPDATE `usuarios` SET usuario='"+usuario+"', contrasena='"+contrasena+"', nombre='"+nombre+"', apellido='"+apellido+"', correo='"+correo+"', rol='"+rol+"' WHERE id_usuario='"+id+"'";
            
            ps = cn.prepareStatement(query);
            ps.execute();
            JOptionPane.showMessageDialog(null, "Usuario actualizado");
            
            //Funciones para mostrar los datos en la tabla cuando se actualicen y para limpiar los textfields
            MostrarDatos("");
            Limpiar();         
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);                     
        } 
    }//GEN-LAST:event_btn_modificarActionPerformed

    private void table_usuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_usuarioMouseClicked
        //Este evento realiza una accion que al topar un dato de la tabla se rellenan los textfiels
        //Esto también es parte del botón de borrar y actualizar
        
        String rol = String.valueOf(cmb_rol.getSelectedIndex());
        
        this.txt_usuario.setText(Usuarios.getValueAt(table_usuario.getSelectedRow(),1).toString());
        this.txt_contrasena.setText(Usuarios.getValueAt(table_usuario.getSelectedRow(),2).toString());
        this.txt_nombre.setText(Usuarios.getValueAt(table_usuario.getSelectedRow(),3).toString());
        this.txt_apellido.setText(Usuarios.getValueAt(table_usuario.getSelectedRow(),4).toString());
        this.txt_correo.setText(Usuarios.getValueAt(table_usuario.getSelectedRow(),5).toString());
        cmb_rol.setSelectedItem(rol);
    }//GEN-LAST:event_table_usuarioMouseClicked

    private void txt_usuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_usuarioKeyTyped
        //Evento que filtra la información de un textfield para que se presente en la tabla        
        txt_usuario.addKeyListener(new KeyAdapter(){
        
            @Override
            public void keyReleased(KeyEvent ke){
            
                trs.setRowFilter(RowFilter.regexFilter("(?i)" + txt_usuario.getText(), 1));               
            }
        });
        
        trs = new TableRowSorter(Usuarios);
        table_usuario.setRowSorter(trs);
    }//GEN-LAST:event_txt_usuarioKeyTyped

    private void btn_imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_imprimirActionPerformed
        //Botón para imprimir reporte
        Connection con = MyConnection.getConnection();
        try{
            JasperReport jr = (JasperReport) JRLoader.loadObject(frm_producto.class.getResource("/Reportes/Reporte_usuario.jasper"));
            Map parametros = new HashMap<>();
            parametros.put("Titulo", "Reporte de usuario");

            JasperPrint jp = JasperFillManager.fillReport(jr, parametros, con);
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);
        }
        catch (JRException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_btn_imprimirActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_control_usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_control_usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_control_usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_control_usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_control_usuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_borrar;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JButton btn_imprimir;
    private javax.swing.JButton btn_modificar;
    private javax.swing.JComboBox<String> cmb_rol;
    private javax.swing.JLabel img_logo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_apellido;
    private javax.swing.JLabel lb_contrasena;
    private javax.swing.JLabel lb_control_usuario;
    private javax.swing.JLabel lb_correo;
    private javax.swing.JLabel lb_nombre;
    private javax.swing.JLabel lb_rol;
    private javax.swing.JLabel lb_usuario;
    private javax.swing.JSeparator line1;
    private javax.swing.JPanel pnl_bg1;
    private javax.swing.JPanel pnl_bg2;
    private javax.swing.JTable table_usuario;
    private javax.swing.JTextField txt_apellido;
    private javax.swing.JPasswordField txt_contrasena;
    private javax.swing.JTextField txt_correo;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_usuario;
    private javax.swing.JTextField txt_usuario1;
    // End of variables declaration//GEN-END:variables
}
